services:
  db:
    image: postgres:alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: voluntariese
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    volumes:
      - database:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    working_dir: /usr/src/app
    volumes:
      - ./client:/usr/src/app
    ports:
      - "5173:5173"
    restart: unless-stopped
    command: >
      sh -c "rm -rf node_modules package-lock.json && npm install && npm run dev"

  api:
    build:
      dockerfile: Dockerfile
      context: "./service"
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./service:/app
    command: >
      sh -c "rm -rf node_modules package-lock.json && npm install && npm run start:db && npm run dev"

volumes:
  database: